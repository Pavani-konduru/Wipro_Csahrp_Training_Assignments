1. what is the significance of Scope of variable? What are the different scope options available in c#?

Ans. * The scope of a variable refers to the part of the program where that variable is accessible.
     * A variable can be defined in a class, method, loop etc.
     * A variable scope refers to the availability of variables in certain parts of the code.

   In C#, a variable has three types of scope:
      - Class Level Scope
         Declaring the variables in a class but outside any method can be directly accessed anywhere in the class.
         These variables are also termed as the fields or class members.
      - Method Level Scope
         Variables that are declared inside a method have method level scope. These are not accessible outside the method.
      - Block Level Scope
        These variables are generally declared inside the for, while statement etc.
        These variables are also termed as the loop variables or statements variable as they have limited their scope up to the body of         the statement in which it declared.
        

2. Difference between a variable and constant?

Ans.* A constant is a data item whose value cannot change during the program’s execution. Thus, as its name implies – the value is constant.
      A variable is a data item whose value can change during the program’s execution. Thus, as its name implies – the value can vary.

    * Constants are usually written in numbers.	
      Variables are specially written in letters or symbols.

    * Constants have fixed face values.
      Variables do not have fixed face values.
    
    * A constant is used to hold the fixed values which we can retrieve later but cannot change.
    * A variable is used to hold some value that can be changed according to the requirement.

3. What is the Maximum value that we can store in store in integer variable in c#?

Ans. Typically, integers are stored as 4 bytes (32 bits). This means that in almost all machines, the maximum integer value will be 2                                          ^(31) - 1 = +2147483647.

4. What is the Difference Between Boxing and Unboxing?
* Boxing
---------
==> The process of converting a Value Type variable (char, int etc.) to a Reference Type variable (object) is called Boxing.
==> Boxing is an implicit conversion process in which object type (super type) is used.
==> Value Type variables are always stored in Stack memory, while Reference Type variables are stored in Heap memory.

Unboxing:-
-----------
==> The process of converting a Reference Type variable into a Value Type variable is known as Unboxing.
==> It is an explicit conversion process.
	
	
